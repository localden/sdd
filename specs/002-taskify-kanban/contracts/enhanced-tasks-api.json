{
  "openapi": "3.0.1",
  "info": {
    "title": "Taskify Enhanced Tasks API",
    "version": "1.0.0",
    "description": "Enhanced API for task management with kanban positioning and real-time operations"
  },
  "servers": [
    {
      "url": "https://localhost:7195/api",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "TaskDto": {
        "type": "object",
        "required": ["id", "title", "status", "projectId", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["todo", "inprogress", "review", "done"]
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"]
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assigneeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/TaskMetadataDto"
          },
          "estimatedHours": {
            "type": "integer",
            "minimum": 0
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "position": {
            "$ref": "#/components/schemas/TaskPositionDto"
          }
        }
      },
      "TaskMetadataDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$",
            "nullable": true
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "lastMovedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastMovedBy": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "moveCount": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          }
        }
      },
      "TaskPositionDto": {
        "type": "object",
        "required": ["id", "taskId", "boardId", "columnId", "position"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "columnId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "number",
            "format": "decimal"
          },
          "swimlaneValue": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "KanbanBoardTasksDto": {
        "type": "object",
        "required": ["boardId", "tasks", "columns"],
        "properties": {
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "boardName": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            }
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardColumnDto"
            }
          },
          "swimlanes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalCount": {
            "type": "integer"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BoardColumnDto": {
        "type": "object",
        "required": ["id", "name", "keyField", "position"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "keyField": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "wipLimit": {
            "type": "integer",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "taskCount": {
            "type": "integer"
          }
        }
      },
      "MoveTaskRequest": {
        "type": "object",
        "required": ["taskId", "boardId", "newColumnId", "newPosition"],
        "properties": {
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "newColumnId": {
            "type": "string",
            "format": "uuid"
          },
          "newPosition": {
            "type": "number",
            "format": "decimal"
          },
          "newSwimlaneValue": {
            "type": "string",
            "nullable": true
          },
          "lastKnownVersion": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "MoveTaskResponse": {
        "type": "object",
        "required": ["success", "task"],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "task": {
            "$ref": "#/components/schemas/TaskDto"
          },
          "conflictDetected": {
            "type": "boolean",
            "default": false
          },
          "conflictInfo": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "currentVersion": {
                "type": "integer"
              },
              "expectedVersion": {
                "type": "integer"
              }
            }
          }
        }
      },
      "BatchMoveTasksRequest": {
        "type": "object",
        "required": ["moves"],
        "properties": {
          "moves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoveTaskRequest"
            },
            "maxItems": 50
          }
        }
      },
      "BoardFilterRequest": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assigneeIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "priorities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            }
          },
          "dueDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dueDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "searchText": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "swimlaneBy": {
            "type": "string",
            "enum": ["none", "assignee", "priority", "project"],
            "default": "none"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    }
  },
  "paths": {
    "/kanban/boards/{boardId}/tasks": {
      "get": {
        "summary": "Get all tasks for a kanban board with positioning",
        "operationId": "getBoardTasks",
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardFilterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board tasks with kanban layout information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KanbanBoardTasksDto"
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/kanban/tasks/{taskId}/move": {
      "put": {
        "summary": "Move a task to a new position on the kanban board",
        "operationId": "moveTask",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task moved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid move request or WIP limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - task was modified by another user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveTaskResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task or board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/kanban/tasks/move-batch": {
      "put": {
        "summary": "Move multiple tasks in a single operation",
        "operationId": "batchMoveTasks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchMoveTasksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch move completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MoveTaskResponse"
                      }
                    },
                    "successCount": {
                      "type": "integer"
                    },
                    "failureCount": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid batch move request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/position": {
      "get": {
        "summary": "Get task position information for all boards",
        "operationId": "getTaskPositions",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task position information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskPositionDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/assign-to-board": {
      "post": {
        "summary": "Assign an existing task to a kanban board",
        "operationId": "assignTaskToBoard",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["boardId", "columnId"],
                "properties": {
                  "boardId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "columnId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "position": {
                    "type": "number",
                    "format": "decimal",
                    "nullable": true
                  },
                  "swimlaneValue": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task assigned to board successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPositionDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid assignment request or task already on board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task, board, or column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/remove-from-board": {
      "delete": {
        "summary": "Remove a task from a kanban board",
        "operationId": "removeTaskFromBoard",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "boardId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task removed from board successfully"
          },
          "404": {
            "description": "Task or board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}