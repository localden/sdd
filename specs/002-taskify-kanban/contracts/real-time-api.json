{
  "openapi": "3.0.1",
  "info": {
    "title": "Taskify Real-Time SignalR API",
    "version": "1.0.0",
    "description": "SignalR hub contract for real-time kanban board operations and notifications"
  },
  "servers": [
    {
      "url": "wss://localhost:7195/hubs",
      "description": "Development WebSocket server"
    }
  ],
  "components": {
    "schemas": {
      "TaskMoveEvent": {
        "type": "object",
        "required": ["taskId", "boardId", "newColumnId", "newPosition", "movedBy", "timestamp"],
        "properties": {
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "oldColumnId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "newColumnId": {
            "type": "string",
            "format": "uuid"
          },
          "oldPosition": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "newPosition": {
            "type": "number",
            "format": "decimal"
          },
          "oldSwimlaneValue": {
            "type": "string",
            "nullable": true
          },
          "newSwimlaneValue": {
            "type": "string",
            "nullable": true
          },
          "movedBy": {
            "type": "string",
            "format": "uuid"
          },
          "movedByName": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "integer"
          }
        }
      },
      "TaskUpdateEvent": {
        "type": "object",
        "required": ["taskId", "boardId", "field", "updatedBy", "timestamp"],
        "properties": {
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "field": {
            "type": "string",
            "enum": ["title", "description", "priority", "dueDate", "assignee", "tags", "status"]
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "format": "uuid"
          },
          "updatedByName": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BoardConfigurationEvent": {
        "type": "object",
        "required": ["boardId", "changeType", "changedBy", "timestamp"],
        "properties": {
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "changeType": {
            "type": "string",
            "enum": ["columns_updated", "settings_updated", "wip_limits_changed", "swimlanes_configured"]
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          },
          "changedBy": {
            "type": "string",
            "format": "uuid"
          },
          "changedByName": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserPresenceEvent": {
        "type": "object",
        "required": ["userId", "boardId", "status", "timestamp"],
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["online", "offline", "idle", "active"]
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskDragEvent": {
        "type": "object",
        "required": ["taskId", "boardId", "draggedBy", "timestamp"],
        "properties": {
          "taskId": {
            "type": "string",
            "format": "uuid"
          },
          "boardId": {
            "type": "string",
            "format": "uuid"
          },
          "dragState": {
            "type": "string",
            "enum": ["start", "move", "end", "cancel"]
          },
          "currentColumnId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "targetColumnId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "draggedBy": {
            "type": "string",
            "format": "uuid"
          },
          "draggedByName": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationEvent": {
        "type": "object",
        "required": ["id", "userId", "type", "title", "timestamp"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["task_assigned", "task_moved", "board_updated", "due_date_reminder", "wip_limit_exceeded"]
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "relatedTaskId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "relatedBoardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "enum": ["low", "normal", "high", "urgent"],
            "default": "normal"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ConnectionInfo": {
        "type": "object",
        "required": ["connectionId", "userId"],
        "properties": {
          "connectionId": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "connectedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorEvent": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/kanban": {
      "description": "SignalR Hub: /hubs/kanban",
      "x-signalr": {
        "hub": "KanbanHub",
        "methods": {
          "server-to-client": [
            {
              "name": "TaskMoved",
              "description": "Notifies clients when a task is moved on the board",
              "parameters": [
                {
                  "name": "moveEvent",
                  "schema": {
                    "$ref": "#/components/schemas/TaskMoveEvent"
                  }
                }
              ]
            },
            {
              "name": "TaskUpdated",
              "description": "Notifies clients when a task is updated",
              "parameters": [
                {
                  "name": "updateEvent",
                  "schema": {
                    "$ref": "#/components/schemas/TaskUpdateEvent"
                  }
                }
              ]
            },
            {
              "name": "BoardConfigurationChanged",
              "description": "Notifies clients when board configuration changes",
              "parameters": [
                {
                  "name": "configEvent",
                  "schema": {
                    "$ref": "#/components/schemas/BoardConfigurationEvent"
                  }
                }
              ]
            },
            {
              "name": "UserPresenceChanged",
              "description": "Notifies clients about user presence changes",
              "parameters": [
                {
                  "name": "presenceEvent",
                  "schema": {
                    "$ref": "#/components/schemas/UserPresenceEvent"
                  }
                }
              ]
            },
            {
              "name": "TaskDragStateChanged",
              "description": "Notifies clients about task drag operations in progress",
              "parameters": [
                {
                  "name": "dragEvent",
                  "schema": {
                    "$ref": "#/components/schemas/TaskDragEvent"
                  }
                }
              ]
            },
            {
              "name": "NotificationReceived",
              "description": "Sends real-time notifications to users",
              "parameters": [
                {
                  "name": "notification",
                  "schema": {
                    "$ref": "#/components/schemas/NotificationEvent"
                  }
                }
              ]
            },
            {
              "name": "ConnectionEstablished",
              "description": "Confirms successful connection establishment",
              "parameters": [
                {
                  "name": "connectionInfo",
                  "schema": {
                    "$ref": "#/components/schemas/ConnectionInfo"
                  }
                }
              ]
            },
            {
              "name": "ErrorOccurred",
              "description": "Notifies client about errors during real-time operations",
              "parameters": [
                {
                  "name": "error",
                  "schema": {
                    "$ref": "#/components/schemas/ErrorEvent"
                  }
                }
              ]
            }
          ],
          "client-to-server": [
            {
              "name": "JoinBoard",
              "description": "Join a specific kanban board for real-time updates",
              "parameters": [
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ],
              "returns": {
                "type": "boolean",
                "description": "True if successfully joined the board"
              }
            },
            {
              "name": "LeaveBoard",
              "description": "Leave a kanban board to stop receiving updates",
              "parameters": [
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ],
              "returns": {
                "type": "boolean",
                "description": "True if successfully left the board"
              }
            },
            {
              "name": "StartTaskDrag",
              "description": "Notify other users that a task drag operation has started",
              "parameters": [
                {
                  "name": "taskId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "currentColumnId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ]
            },
            {
              "name": "UpdateTaskDrag",
              "description": "Update task drag position for other users",
              "parameters": [
                {
                  "name": "taskId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "targetColumnId",
                  "schema": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              ]
            },
            {
              "name": "EndTaskDrag",
              "description": "Notify other users that a task drag operation has ended",
              "parameters": [
                {
                  "name": "taskId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "finalColumnId",
                  "schema": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  }
                }
              ]
            },
            {
              "name": "MoveTask",
              "description": "Move a task and notify other users (alternative to REST API)",
              "parameters": [
                {
                  "name": "moveRequest",
                  "schema": {
                    "type": "object",
                    "required": ["taskId", "boardId", "newColumnId", "newPosition"],
                    "properties": {
                      "taskId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "boardId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "newColumnId": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "newPosition": {
                        "type": "number",
                        "format": "decimal"
                      },
                      "newSwimlaneValue": {
                        "type": "string",
                        "nullable": true
                      },
                      "lastKnownVersion": {
                        "type": "integer"
                      }
                    }
                  }
                }
              ],
              "returns": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true
                    },
                    "conflictDetected": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            {
              "name": "UpdatePresence",
              "description": "Update user presence status",
              "parameters": [
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "name": "status",
                  "schema": {
                    "type": "string",
                    "enum": ["active", "idle"]
                  }
                }
              ]
            },
            {
              "name": "RequestBoardSync",
              "description": "Request full board synchronization (for conflict resolution)",
              "parameters": [
                {
                  "name": "boardId",
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              ],
              "returns": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "syncRequested": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          ]
        },
        "groups": [
          {
            "name": "board_{boardId}",
            "description": "Group for all users viewing a specific kanban board"
          },
          {
            "name": "user_{userId}",
            "description": "Group for sending notifications to a specific user"
          },
          {
            "name": "project_{projectId}",
            "description": "Group for all users with access to a specific project"
          }
        ],
        "authorization": {
          "required": true,
          "description": "JWT Bearer token required. Token can be passed via query parameter 'access_token' for WebSocket connections."
        },
        "connection": {
          "automaticReconnect": true,
          "reconnectIntervals": [0, 2000, 10000, 30000],
          "timeouts": {
            "client": 60000,
            "handshake": 15000,
            "keepAlive": 15000
          }
        }
      }
    }
  }
}